scalar Date
scalar Keyword

type Query {
  district(regEntry_address: ID!): District
  searchDistricts(
    statuses: [RegEntryStatus],
    orderBy: DistrictsOrderBy,
    orderDir: OrderDir,
    first: Int,
    after: String
  ): DistrictList

  paramChange(regEntry_address: ID!): ParamChange
  searchParamChanges(
    first: Int,
    after: String
  ): ParamChangeList

  param(db: String!, key: String!): Param
  params(db: String!, keys: [String!]): [Param]
}

enum OrderDir {
  asc
  desc
}

enum DistrictsOrderBy {
  districts_orderBy_revealPeriodEnd
  districts_orderBy_commitPeriodEnd
  districts_orderBy_dntStaked
  districts_orderBy_totalSupply
  districts_orderBy_createdOn
}

enum RegEntryStatus {
  regEntry_status_challengePeriod
  regEntry_status_commitPeriod
  regEntry_status_revealPeriod
  regEntry_status_blacklisted
  regEntry_status_whitelisted
}

interface RegEntry {
  regEntry_address: ID
  regEntry_version: Int
  regEntry_status: RegEntryStatus
  regEntry_creator: String
  regEntry_deposit: Int
  regEntry_createdOn: Date
  regEntry_challengePeriodEnd: Date
  regEntry_challenges: [Challenge!]!
}

type Challenge {
  challenge_challenger: String
  challenge_createdOn: Date
  challenge_rewardPool: Int
  challenge_commitPeriodEnd: Date
  challenge_revealPeriodEnd: Date
  challenge_votesInclude: String
  challenge_votesExclude: String
  challenge_votesTotal: String
  challenge_claimedRewardOn: Date
  challenge_vote(vote_voter: ID!): Vote
}

enum VoteOption {
  voteOption_neither
  voteOption_include
  voteOption_exclude
}

type Vote {
  vote_secretHash: String
  vote_option: VoteOption
  vote_amount: Float
  vote_revealedOn: Date
  vote_claimedRewardOn: Date
  vote_reward: Int
}

type District implements RegEntry {
  regEntry_address: ID
  regEntry_version: Int
  regEntry_status: RegEntryStatus
  regEntry_creator: String
  regEntry_deposit: Int
  regEntry_createdOn: Date
  regEntry_challengePeriodEnd: Date
  regEntry_challenges: [Challenge!]!

  district_infoHash: String
  district_dntWeight: Int
  district_dntStaked: String
  district_totalSupply: String
}

type DistrictList {
  items: [District]
  totalCount: Int
  endCursor: String
  hasNextPage: Boolean
}

type ParamChange implements RegEntry {
  regEntry_address: ID
  regEntry_version: Int
  regEntry_status: RegEntryStatus
  regEntry_creator: String
  regEntry_deposit: Int
  regEntry_createdOn: Date
  regEntry_challengePeriodEnd: Date
  regEntry_challenges: [Challenge!]!

  paramChange_db: String
  paramChange_key: String
  paramChange_value: Int
  paramChange_originalValue: Int
  paramChange_appliedOn: Date
}

type ParamChangeList {
  items: [ParamChange]
  totalCount: Int
  endCursor: ID
  hasNextPage: Boolean
}

type Param {
  param_db: ID
  param_key: ID
  param_value: Float
}
