{
  "contractName": "ParamChangeRegistryForwarder",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "authority_",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "authority",
          "type": "address"
        }
      ],
      "name": "LogSetAuthority",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "LogSetOwner",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "setTarget",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"setTarget\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"setTarget(address)\":{\"details\":\"Replaces targer forwarder contract is pointing to Only authenticated user can replace target\",\"params\":{\"_target\":\"New target to proxy into\"}}},\"title\":\"Forwarder proxy contract with editable target\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/matus/www/district0x/district-registry/contracts/proxy/MutableForwarder.sol\":\"MutableForwarder\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/matus/www/district0x/district-registry/contracts/auth/DSAuth.sol\":{\"keccak256\":\"0xe0c3a51cf1166395d19844135010701f46f7d632fe2549696c2bae792692a3b1\",\"urls\":[\"bzzr://cc4ef96c52d3f65a11227fc80c8c9198210bdb28f6269bdbfa094e6239cad46c\"]},\"/Users/matus/www/district0x/district-registry/contracts/proxy/ForwarderDelegateProxy.sol\":{\"keccak256\":\"0xe2dfc4bc94a80eb8f1da40ae033ad8f66f9203d6f89dcfbc6805b5b3716c450b\",\"urls\":[\"bzzr://a1c04ab2c7511f7326276d0c045b4db31a0ef6d749c2030f0744106fe2eb3ba0\"]},\"/Users/matus/www/district0x/district-registry/contracts/proxy/MutableForwarder.sol\":{\"keccak256\":\"0xea6b4bc46711ea9b5dc076053d04259393b8c21420b18cd6ef2534868170e382\",\"urls\":[\"bzzr://e1a9db2726906286c3adb0b5803ec892451420c11be49f4d0847968c48ac6a4e\"]}},\"version\":1}",
  "bytecode": "0x6080604052739920dCC4c2220D7476db46F5A2289962b07FfDe1600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a261084b806100ec6000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313af4035146100d9578063776d1a011461011c5780637a9e5e4b1461015f5780638da5cb5b146101a2578063bf7e214f146101f9578063d4b8399214610250575b6100d7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000368080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050506102a7565b005b3480156100e557600080fd5b5061011a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102e5565b005b34801561012857600080fd5b5061015d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103c7565b005b34801561016b57600080fd5b506101a0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610444565b005b3480156101ae57600080fd5b506101b7610524565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561020557600080fd5b5061020e61054a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561025c57600080fd5b5061026561056f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b082610595565b15156102bb57600080fd5b600080825160208401856127105a03f43d604051816000823e82600081146102e1578282f35b8282fd5b610313336000357fffffffff00000000000000000000000000000000000000000000000000000000166105a8565b151561031e57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b6103f5336000357fffffffff00000000000000000000000000000000000000000000000000000000166105a8565b151561040057600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610472336000357fffffffff00000000000000000000000000000000000000000000000000000000166105a8565b151561047d57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080823b905060008111915050919050565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105e75760019050610819565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106465760019050610819565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106a55760009050610819565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019350505050602060405180830381600087803b1580156107db57600080fd5b505af11580156107ef573d6000803e3d6000fd5b505050506040513d602081101561080557600080fd5b810190808051906020019092919050505090505b929150505600a165627a7a723058207e4eb80da5b4900a4dd3abbb3d60a205d5fcde436bfcb8e3acc36a47aea6c5ee0029",
  "deployedBytecode": "0x608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313af4035146100d9578063776d1a011461011c5780637a9e5e4b1461015f5780638da5cb5b146101a2578063bf7e214f146101f9578063d4b8399214610250575b6100d7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000368080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050506102a7565b005b3480156100e557600080fd5b5061011a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102e5565b005b34801561012857600080fd5b5061015d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103c7565b005b34801561016b57600080fd5b506101a0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610444565b005b3480156101ae57600080fd5b506101b7610524565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561020557600080fd5b5061020e61054a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561025c57600080fd5b5061026561056f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b082610595565b15156102bb57600080fd5b600080825160208401856127105a03f43d604051816000823e82600081146102e1578282f35b8282fd5b610313336000357fffffffff00000000000000000000000000000000000000000000000000000000166105a8565b151561031e57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b6103f5336000357fffffffff00000000000000000000000000000000000000000000000000000000166105a8565b151561040057600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610472336000357fffffffff00000000000000000000000000000000000000000000000000000000166105a8565b151561047d57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080823b905060008111915050919050565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105e75760019050610819565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106465760019050610819565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106a55760009050610819565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019350505050602060405180830381600087803b1580156107db57600080fd5b505af11580156107ef573d6000803e3d6000fd5b505050506040513d602081101561080557600080fd5b810190808051906020019092919050505090505b929150505600a165627a7a723058207e4eb80da5b4900a4dd3abbb3d60a205d5fcde436bfcb8e3acc36a47aea6c5ee0029",
  "sourceMap": "698:483:23:-;;;787:42;763:66;;;;;;;;;;;;;;;;;;;;1053:10:15;1045:5;;:18;;;;;;;;;;;;;;;;;;1086:10;1074:23;;;;;;;;;;;;698:483:23;;;;;;",
  "deployedSourceMap": "698:483:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1143:30;1156:6;;;;;;;;;;;1164:8;;1143:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:30::i;:::-;698:483;1106:106:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1106:106:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;1032:75:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1032:75:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;1216:134:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1216:134:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;987:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;987:26:15;;;;;;;;;;;;;;;;;;;;;;;;;;;953:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;953:30:15;;;;;;;;;;;;;;;;;;;;;;;;;;;763:66:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;763:66:23;;;;;;;;;;;;;;;;;;;;;;;;;;;308:559:22;384:16;395:4;384:10;:16::i;:::-;376:25;;;;;;;;517:1;514;502:9;496:16;489:4;478:9;474:20;468:4;460:5;455:3;451:15;438:81;538:14;577:4;571:11;612:4;609:1;604:3;589:28;789:6;801:1;796:26;;;;851:4;846:3;838:18;796:26;816:4;811:3;804:17;1106:106:15;1382:33;1395:10;1407:7;;;;1382:12;:33::i;:::-;1374:42;;;;;;;;1172:6;1164:5;;:14;;;;;;;;;;;;;;;;;;1201:5;;;;;;;;;;;1189:18;;;;;;;;;;;;1106:106;:::o;1032:75:23:-;1382:33:15;1395:10;1407:7;;;;1382:12;:33::i;:::-;1374:42;;;;;;;;1095:7:23;1086:6;;:16;;;;;;;;;;;;;;;;;;1032:75;:::o;1216:134:15:-;1382:33;1395:10;1407:7;;;;1382:12;:33::i;:::-;1374:42;;;;;;;;1298:10;1286:9;;:22;;;;;;;;;;;;;;;;;;1335:9;;;;;;;;;;;1319:26;;;;;;;;;;;;1216:134;:::o;987:26::-;;;;;;;;;;;;;:::o;953:30::-;;;;;;;;;;;;;:::o;763:66:23:-;;;;;;;;;;;;;:::o;871:154:22:-;931:4;943:12;991:7;979:20;971:28;;1019:1;1012:4;:8;1005:15;;871:154;;;;:::o;1432:315:15:-;1502:4;1533;1518:20;;:3;:20;;;1514:229;;;1555:4;1548:11;;;;1514:229;1583:5;;;;;;;;;;;1576:12;;:3;:12;;;1572:171;;;1605:4;1598:11;;;;1572:171;1651:1;1626:27;;:9;;;;;;;;;;;:27;;;1622:121;;;1670:5;1663:12;;;;1622:121;1703:9;;;;;;;;;;;:17;;;1721:3;1726:4;1732:3;1703:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1703:33:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1703:33:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1703:33:15;;;;;;;;;;;;;;;;1696:40;;1432:315;;;;;:::o",
  "source": "pragma solidity ^0.4.18;\n\nimport  \"./ForwarderDelegateProxy.sol\";\nimport \"../auth/DSAuth.sol\";\n\n/**\n * @title Forwarder proxy contract with editable target\n *\n * @dev For TCR Registry contracts (Registry.sol, ParamChangeRegistry.sol) we use mutable forwarders instead of using\n * contracts directly. This is for better upgradeability. Since registry contracts fire all events related to registry\n * entries, we want to be able to access whole history of events always on the same address. Which would be address of\n * a MutableForwarder. When a registry contract is replaced with updated one, mutable forwarder just replaces target\n * and all events stay still accessible on the same address.\n */\n\ncontract MutableForwarder is ForwarderDelegateProxy, DSAuth {\n\n  address public target = 0xBEeFbeefbEefbeEFbeEfbEEfBEeFbeEfBeEfBeef; // checksumed to silence warning\n\n  /**\n   * @dev Replaces targer forwarder contract is pointing to\n   * Only authenticated user can replace target\n\n   * @param _target New target to proxy into\n  */\n  function setTarget(address _target) public auth {\n    target = _target;\n  }\n\n  function() public payable {\n    delegatedFwd(target, msg.data);\n  }\n\n}",
  "sourcePath": "/Users/matus/www/district0x/district-registry/contracts/proxy/MutableForwarder.sol",
  "ast": {
    "absolutePath": "/Users/matus/www/district0x/district-registry/contracts/proxy/MutableForwarder.sol",
    "exportedSymbols": {
      "MutableForwarder": [
        8028
      ]
    },
    "id": 8029,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7996,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:23"
      },
      {
        "absolutePath": "/Users/matus/www/district0x/district-registry/contracts/proxy/ForwarderDelegateProxy.sol",
        "file": "./ForwarderDelegateProxy.sol",
        "id": 7997,
        "nodeType": "ImportDirective",
        "scope": 8029,
        "sourceUnit": 7995,
        "src": "26:39:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matus/www/district0x/district-registry/contracts/auth/DSAuth.sol",
        "file": "../auth/DSAuth.sol",
        "id": 7998,
        "nodeType": "ImportDirective",
        "scope": 8029,
        "sourceUnit": 5817,
        "src": "66:28:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7999,
              "name": "ForwarderDelegateProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7994,
              "src": "727:22:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ForwarderDelegateProxy_$7994",
                "typeString": "contract ForwarderDelegateProxy"
              }
            },
            "id": 8000,
            "nodeType": "InheritanceSpecifier",
            "src": "727:22:23"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8001,
              "name": "DSAuth",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5816,
              "src": "751:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DSAuth_$5816",
                "typeString": "contract DSAuth"
              }
            },
            "id": 8002,
            "nodeType": "InheritanceSpecifier",
            "src": "751:6:23"
          }
        ],
        "contractDependencies": [
          5707,
          5816,
          7994
        ],
        "contractKind": "contract",
        "documentation": "@title Forwarder proxy contract with editable target\n * @dev For TCR Registry contracts (Registry.sol, ParamChangeRegistry.sol) we use mutable forwarders instead of using\ncontracts directly. This is for better upgradeability. Since registry contracts fire all events related to registry\nentries, we want to be able to access whole history of events always on the same address. Which would be address of\na MutableForwarder. When a registry contract is replaced with updated one, mutable forwarder just replaces target\nand all events stay still accessible on the same address.",
        "fullyImplemented": true,
        "id": 8028,
        "linearizedBaseContracts": [
          8028,
          5816,
          5707,
          7994
        ],
        "name": "MutableForwarder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8005,
            "name": "target",
            "nodeType": "VariableDeclaration",
            "scope": 8028,
            "src": "763:66:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8003,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "763:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307842456546626565666245656662654546626545666245456642456546626545664265456642656566",
              "id": 8004,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "787:42:23",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xBEeFbeefbEefbeEFbeEfbEEfBEeFbeEfBeEfBeef"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8016,
              "nodeType": "Block",
              "src": "1080:27:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8012,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8005,
                      "src": "1086:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8013,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8007,
                      "src": "1095:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1086:16:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8015,
                  "nodeType": "ExpressionStatement",
                  "src": "1086:16:23"
                }
              ]
            },
            "documentation": "@dev Replaces targer forwarder contract is pointing to\nOnly authenticated user can replace target\n@param _target New target to proxy into",
            "id": 8017,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 8010,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8009,
                  "name": "auth",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5772,
                  "src": "1075:4:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1075:4:23"
              }
            ],
            "name": "setTarget",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8007,
                  "name": "_target",
                  "nodeType": "VariableDeclaration",
                  "scope": 8017,
                  "src": "1051:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1051:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1050:17:23"
            },
            "payable": false,
            "returnParameters": {
              "id": 8011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1080:0:23"
            },
            "scope": 8028,
            "src": "1032:75:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8026,
              "nodeType": "Block",
              "src": "1137:41:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8021,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8005,
                        "src": "1156:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8022,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20165,
                          "src": "1164:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1164:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 8020,
                      "name": "delegatedFwd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7977,
                      "src": "1143:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory)"
                      }
                    },
                    "id": 8024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1143:30:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8025,
                  "nodeType": "ExpressionStatement",
                  "src": "1143:30:23"
                }
              ]
            },
            "documentation": null,
            "id": 8027,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1119:2:23"
            },
            "payable": true,
            "returnParameters": {
              "id": 8019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1137:0:23"
            },
            "scope": 8028,
            "src": "1111:67:23",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 8029,
        "src": "698:483:23"
      }
    ],
    "src": "0:1181:23"
  },
  "legacyAST": {
    "absolutePath": "/Users/matus/www/district0x/district-registry/contracts/proxy/MutableForwarder.sol",
    "exportedSymbols": {
      "MutableForwarder": [
        8028
      ]
    },
    "id": 8029,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7996,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:23"
      },
      {
        "absolutePath": "/Users/matus/www/district0x/district-registry/contracts/proxy/ForwarderDelegateProxy.sol",
        "file": "./ForwarderDelegateProxy.sol",
        "id": 7997,
        "nodeType": "ImportDirective",
        "scope": 8029,
        "sourceUnit": 7995,
        "src": "26:39:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matus/www/district0x/district-registry/contracts/auth/DSAuth.sol",
        "file": "../auth/DSAuth.sol",
        "id": 7998,
        "nodeType": "ImportDirective",
        "scope": 8029,
        "sourceUnit": 5817,
        "src": "66:28:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7999,
              "name": "ForwarderDelegateProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7994,
              "src": "727:22:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ForwarderDelegateProxy_$7994",
                "typeString": "contract ForwarderDelegateProxy"
              }
            },
            "id": 8000,
            "nodeType": "InheritanceSpecifier",
            "src": "727:22:23"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8001,
              "name": "DSAuth",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5816,
              "src": "751:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DSAuth_$5816",
                "typeString": "contract DSAuth"
              }
            },
            "id": 8002,
            "nodeType": "InheritanceSpecifier",
            "src": "751:6:23"
          }
        ],
        "contractDependencies": [
          5707,
          5816,
          7994
        ],
        "contractKind": "contract",
        "documentation": "@title Forwarder proxy contract with editable target\n * @dev For TCR Registry contracts (Registry.sol, ParamChangeRegistry.sol) we use mutable forwarders instead of using\ncontracts directly. This is for better upgradeability. Since registry contracts fire all events related to registry\nentries, we want to be able to access whole history of events always on the same address. Which would be address of\na MutableForwarder. When a registry contract is replaced with updated one, mutable forwarder just replaces target\nand all events stay still accessible on the same address.",
        "fullyImplemented": true,
        "id": 8028,
        "linearizedBaseContracts": [
          8028,
          5816,
          5707,
          7994
        ],
        "name": "MutableForwarder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8005,
            "name": "target",
            "nodeType": "VariableDeclaration",
            "scope": 8028,
            "src": "763:66:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8003,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "763:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307842456546626565666245656662654546626545666245456642456546626545664265456642656566",
              "id": 8004,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "787:42:23",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xBEeFbeefbEefbeEFbeEfbEEfBEeFbeEfBeEfBeef"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8016,
              "nodeType": "Block",
              "src": "1080:27:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8012,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8005,
                      "src": "1086:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8013,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8007,
                      "src": "1095:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1086:16:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8015,
                  "nodeType": "ExpressionStatement",
                  "src": "1086:16:23"
                }
              ]
            },
            "documentation": "@dev Replaces targer forwarder contract is pointing to\nOnly authenticated user can replace target\n@param _target New target to proxy into",
            "id": 8017,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 8010,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8009,
                  "name": "auth",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5772,
                  "src": "1075:4:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1075:4:23"
              }
            ],
            "name": "setTarget",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8007,
                  "name": "_target",
                  "nodeType": "VariableDeclaration",
                  "scope": 8017,
                  "src": "1051:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1051:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1050:17:23"
            },
            "payable": false,
            "returnParameters": {
              "id": 8011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1080:0:23"
            },
            "scope": 8028,
            "src": "1032:75:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8026,
              "nodeType": "Block",
              "src": "1137:41:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8021,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8005,
                        "src": "1156:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8022,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20165,
                          "src": "1164:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1164:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 8020,
                      "name": "delegatedFwd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7977,
                      "src": "1143:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory)"
                      }
                    },
                    "id": 8024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1143:30:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8025,
                  "nodeType": "ExpressionStatement",
                  "src": "1143:30:23"
                }
              ]
            },
            "documentation": null,
            "id": 8027,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1119:2:23"
            },
            "payable": true,
            "returnParameters": {
              "id": 8019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1137:0:23"
            },
            "scope": 8028,
            "src": "1111:67:23",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 8029,
        "src": "698:483:23"
      }
    ],
    "src": "0:1181:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x4C28b3a3b2b6C2aE7e440b0BE161A38f72039A39",
      "transactionHash": "0x1316c827f0a33a982b5ae29b05832befb42befbb2d3ceba8d08d8af6660c5e76"
    }
  },
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-07-01T12:48:23.166Z",
  "devdoc": {
    "methods": {
      "setTarget(address)": {
        "details": "Replaces targer forwarder contract is pointing to Only authenticated user can replace target",
        "params": {
          "_target": "New target to proxy into"
        }
      }
    },
    "title": "Forwarder proxy contract with editable target"
  },
  "userdoc": {
    "methods": {}
  }
}